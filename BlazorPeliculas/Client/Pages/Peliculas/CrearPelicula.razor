@page "/peliculas/crear"
@inject NavigationManager navigationManager
@inject IRepositoriocs repositorio
@inject IMostrarMensajes mostrarMensajes

<h3>Crear Pelicula</h3>

@if (MostrarFormulario)
{
    <FormularioPeliculas Pelicula="Pelicula" OnValidSubmit="Crear"
                     GenerosNoSeleccionados="GenerosNoSeleccionados"
                        CinesNoSeleccionados = "CinesNoSeleccionados">
    </FormularioPeliculas>
}
else
{
    <text>Cargando...</text>
}

@code {
    private bool MostrarFormulario { get; set; } = false;
    private Pelicula Pelicula = new Pelicula();
    private List<Genero> GenerosNoSeleccionados = new List<Genero>();
    private List<Cine> CinesNoSeleccionados = new List<Cine>();

    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await repositorio.Get<List<Genero>>("api/generos");
        var responseHttpCines = await repositorio.Get<List<Cine>>("api/cines");
        GenerosNoSeleccionados = responseHttp.Response.ToList();
        CinesNoSeleccionados = responseHttpCines.Response.ToList();
        MostrarFormulario = true;
    }

    private async Task Crear()
    {
        var httpResponse = await repositorio.Post<Pelicula, int>("api/peliculas", Pelicula);

        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.GetBody();
            mostrarMensajes.MostrarMensajesError(mensajeError);
        }
        else
        {
            var PeliculaId = httpResponse.Response;
            navigationManager.NavigateTo($"/peliculas/{PeliculaId}/{Pelicula.Titulo.Replace(" ", "-")}");
        }
    }

}